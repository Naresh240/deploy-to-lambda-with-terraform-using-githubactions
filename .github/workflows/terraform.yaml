name: Deploy_TO_Lambda_Using_Terraform

env:
  Terraform_Operation: destroy
on: 
  push:
    paths:
    - 'terraform/**'
  pull_request:
    branches:
      - master

jobs:
  Build_Atifact:
    name: 'Build Artifact and Push to S3'
    if: github.event_name == 'push'
    runs-on: ubuntu-latest 
    steps:
    #Using versioned actions 
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:  
        node-version: '14'
    - name: Configure AWS Credentials  
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Install dependencies
      run: |
        if [ -e yarn.lock ]; then
        yarn install --frozen-lockfile
        elif [ -e package-lock.json ]; then
        npm ci
        else
        npm i
        fi          
    - name: npm install
      env:
        CI: true
      run: |
        npm ci 
    - name: pushToS3
      run: |
        zip -r deploy.zip ./*
        aws s3 cp deploy.zip s3://nodejsartifactsdeploy/deploy.zip
  terraform:
    runs-on: ubuntu-latest
    needs: Build_Atifact    
    if: github.event_name == 'push'
    defaults:
      run:
        working-directory: ./terraform   
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2
    - name: Configure AWS Credentials  
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1    
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
    - name: Terraform Init
      id: init
      run: terraform init
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push' || github.event.pull_request.merged == 'true'
      run: |
        terraform $Terraform_Operation -auto-approve -input=false
